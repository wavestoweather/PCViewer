#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_EXT_scalar_block_layout : enable

// TODO: add bindings
layout(binding = 0, r16) uniform imageBuffer vA; 

layout(binding = 1, r16) uniform imageBuffer vB; 

layout(binding = 2) buffer Lines{
	uint counts[];
};

layout(binding = 3) uniform Infos{
    uint amtOfDataPoints;
    uint aBins, bBins;
    uint padding;
};

layout (local_size_x = 256,local_size_y=1,local_size_z=1) in;

void main(){
    float t = imageLoad(vA, 6).x;
    uint binA = uint(fract(imageLoad(vA, int(gl_GlobalInvocationID.x)).x) * float(aBins));
    uint binB = uint(fract(imageLoad(vB, int(gl_GlobalInvocationID.x)).x) * float(bBins));
    //binA = uint(float(gl_GlobalInvocationID.x) / float(amtOfDataPoints) * float(aBins));
    //binB = uint(float(gl_GlobalInvocationID.x * 2) / float(amtOfDataPoints) * float(bBins)) % bBins;
    uint finalBin = binA * bBins + binB;    // linear index
    atomicAdd(counts[finalBin], 1);         // incrementing
}